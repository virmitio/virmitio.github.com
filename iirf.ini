# Redirect rules using IIRF for CoApp.org site.
StatusInquiry ON

RewriteFilterPriority HIGH

RewriteLog c:\tools\logs\iirf
RewriteLogLevel 0
CondSubstringBackrefFlag %

RedirectRule ^/github$ https://github.com/organizations/coapp [I]

# make sure triggers are working even without the trailing slash
RewriteRule ^/upload$ /upload/ [I]
RewriteRule ^/trigger$ /trigger/ [I]

#canonical CoApp urls
RewriteRule ^/feed$ /repository/packages.xml [I]
RewriteRule ^/feed/$ /repository/packages.xml [I]
RewriteRule ^/packages?(\.atom)?\.xml$ /repository/packages.xml [I]

#canonical locations for our packages. 
RewriteRule ^/install$ /repository/coapp.toolkit.msi [I]
RewriteRule ^/devtools$ /repository/coapp.devtools.msi [I]
RewriteRule ^/install/$ /repository/coapp.toolkit.msi [I]
RewriteRule ^/devtools/$ /repository/coapp.devtools.msi [I]

#canonical locations for certain resources
RewriteRule ^/cleaner/$ /resources/coapp.cleaner.exe [I]
RewriteRule ^/cleaner$ /resources/coapp.cleaner.exe [I]
RewriteRule ^/coapp.cleaner/$ /resources/coapp.cleaner.exe [I]
RewriteRule ^/coapp.cleaner$ /resources/coapp.cleaner.exe [I]
RewriteRule ^/coapp.cleaner.zip$ /resources/coapp.cleaner.zip [I]
RewriteRule ^/coapp.cleaner.exe$ /resources/coapp.cleaner.zip [I]

#offload stuff to blob server and CDN
RedirectRule ^/resources/(.+)$  http://downloads.coapp.org/resources/#L$1#E  [I,R=302]
RedirectRule ^/packages/(.+)$  http://downloads.coapp.org/repository/#L$1#E  [I,R=302]
RedirectRule ^/repository/(.+)$  http://downloads.coapp.org/repository/#L$1#E  [I,R=302]
RedirectRule ^/cdn/(.+)$  http://cdn.coapp.org/repository/#L$1#E  [I,R=302]
RedirectRule ^/videos/(.+)$  http://cdn.coapp.org/resources/#L$1#E  [I,R=302]

ProxyPass ^/proxy/(.*)$  http://downloads.coapp.org/repository/#L$1#E 

# Checks for local file existence so that .css, .js and other  static
# files aren't rewritten
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^/.*$          -     [L]

# /pages rewrites /foo to /pages/foo.html if it exists
RewriteCond %{REQUEST_FILENAME}  ^(.*)\\(.*)$ 
RewriteCond %1\\pages\\%2.html  -f [I]
RedirectRule ^/([^/]*)$ /pages/$1.html

# /pages rewrites /foo/ to /pages/foo.html if it exists
RewriteCond %{REQUEST_FILENAME}  ^(.*)\\(.*)\\$ 
RewriteCond %1\\pages\\%2.html  -f [I]
RedirectRule ^/([^/]*)/$ /pages/$1.html

# /pages rewrites /foo to /help/foo.html if it exists
RewriteCond %{REQUEST_FILENAME}  ^(.*)\\(.*)$ 
RewriteCond %1\\help\\%2.html  -f [I]
RedirectRule ^/([^/]*)$ /help/$1.html

# /pages rewrites /foo/ to /help/foo.html if it exists
RewriteCond %{REQUEST_FILENAME}  ^(.*)\\(.*)\\$ 
RewriteCond %1\\help\\%2.html  -f [I]
RedirectRule ^/([^/]*)/$ /help/$1.html

# /pages rewrites /help/foo to /help/foo.html if it exists
RewriteCond %{REQUEST_FILENAME}  ^(.*)\\(.*)$ 
RewriteCond %1\\%2.html  -f [I]
RedirectRule ^/(.*)$ /$1.html

RewriteCond 
RedirectRule ^/$ /index.html

RewriteCond %{REQUEST_FILENAME} !-f
RedirectRule ^(.*)$ /not-found.html#page=$1   [L]

